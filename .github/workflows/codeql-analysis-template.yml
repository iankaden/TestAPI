name: CodeQL

on:
  workflow_call:
    inputs:
      agent_os:
        required: true
        type: string
      code_language:
        required: true
        type: string
      csharp_mode:
        required: false
        type: string
        default: ""
      build_instructions:
        required: false
        type: string
        default: ""
    secrets:
      package_key:
        required: false

jobs:
  analyze:
    name: Code Analysis
    runs-on: ${{ inputs.agent_os }}
    permissions:
      actions: read
      contents: read
      security-events: write

    steps:
      # Checkout project code into GitHub Actions agent
      - name: Checkout Code
        uses: actions/checkout@v3

      # Initialize CodeQL using the chosen code language
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: ${{ inputs.code_language }}

      # If the code is .NET Core, then build it
      - name: "Build Code (.NET Core)"
        if: inputs.code_language == 'csharp' && inputs.csharp_mode == 'core'
        uses: telus-agcg/ci-pipeline-templates/.github/actions/build-dotnet-core@version/1.3
        with:
          build_instructions: ${{ inputs.build_instructions }}
        env:
          Nuget_ClearTextPassword: ${{ secrets.package_key }}

      # If the code is .NET Framework, then build it
      - name: "Build Code (.NET Framework)"
        if: inputs.code_language == 'csharp' && inputs.csharp_mode == 'framework'
        uses: telus-agcg/ci-pipeline-templates/.github/actions/build-dotnet-framework@version/1.3
        with:
          build_instructions: ${{ inputs.build_instructions }}

      # Start the CodeQL Scan
      - name: Run CodeQL Scan
        uses: github/codeql-action/analyze@v2
